plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.4'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'com.google.protobuf' version '0.9.4'
}

ext {
    protobufVersion = '3.23.4'
    grpcVersion = '1.58.0'
    mapstructVersion = '1.5.5.Final'
}

group = 'com.sever0x'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '21'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // citrus
    testImplementation group: 'org.citrusframework', name: 'citrus-base', version: '4.0.0'
    testImplementation group: 'org.citrusframework', name: 'citrus-spring', version: '4.0.0'
    testImplementation group: 'org.citrusframework', name: 'citrus-endpoint-catalog', version: '4.0.0'
    testImplementation group: 'org.citrusframework', name: 'citrus-testng', version: '4.0.0'
    testImplementation group: 'org.citrusframework', name: 'citrus-junit5', version: '4.0.0'
    testImplementation group: 'org.citrusframework', name: 'citrus-sql', version: '4.0.0'

    // grpc
    implementation 'net.devh:grpc-spring-boot-starter:3.0.0.RELEASE'

    // protobuf
    implementation "com.google.protobuf:protobuf-java:${protobufVersion}"
    implementation "io.grpc:grpc-stub:${grpcVersion}"
    implementation "io.grpc:grpc-protobuf:${grpcVersion}"
    testImplementation "io.grpc:grpc-testing:${grpcVersion}"
    if (JavaVersion.current().isJava9Compatible()) {
        implementation 'javax.annotation:javax.annotation-api:1.3.1'
    }

    // mapstruct
    implementation "org.mapstruct:mapstruct:${mapstructVersion}"
    annotationProcessor 'org.projectlombok:lombok'
    annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"
    annotationProcessor 'org.projectlombok:lombok-mapstruct-binding:0.2.0'

    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'org.postgresql:postgresql'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.boot:spring-boot-testcontainers'
    testImplementation 'org.testcontainers:junit-jupiter'
    testImplementation 'org.testcontainers:postgresql'
}

tasks.named('test') {
    useJUnitPlatform()
    useTestNG()
}

protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:${protobufVersion}"
    }
    plugins {
        grpc {
            artifact = "io.grpc:protoc-gen-grpc-java:${grpcVersion}"
        }
    }
    generateProtoTasks {
        ofSourceSet('main').configureEach {
            plugins {
                grpc { }
            }
        }
    }
}

sourceSets {
    main {
        java {
            srcDirs 'build/generated/source/proto/main/grpc'
            srcDirs 'build/generated/source/proto/main/java'
        }
    }
}